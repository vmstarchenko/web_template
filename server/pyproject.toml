[project]
name = "app"
version = "0.0.0"
dependencies = [
    "sqlmodel==0.0.8",
    "Jinja2",
    "emails",
    "fastapi==0.95.0",
    "passlib",
    "pydantic==1.10.12",
    "pydantic[dotenv]",
    "pydantic[email]",
    "fastapi-users[sqlalchemy]==10.4.1",
    "python-jose",
    "python-multipart",
    "pyyaml",
    "sqlalchemy==1.4.41",
    "sqlalchemy[asyncio]==1.4.41",
    "uvicorn",

    # DB
    # "asyncmy", "mysqlclient", "cryptography",  # MySQL
    "aiosqlite", # sqlite
    # "asyncpg", # postgres
]

[project.optional-dependencies]
dev = [
    "aiosmtpd",
    "aiosqlite",
    "alembic",
    "httpx",
    "pytest",
    "pytest-asyncio",
    "pytest-cov",
    "pytest-mypy",
    "pytest-pylint",
    "sqlalchemy[mypy]==1.4.41",
    "types-python-jose",
    "types-passlib",
]

[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[tool.mypy]
exclude = "venv"
plugins = [
    "pydantic.mypy",
    # "sqlalchemy.ext.mypy.plugin",    # TODO: uncomment
]
strict = true
warn_unreachable = true

[tool.setuptools]
packages = ["app"]

[tool.pytest.ini_options]
asyncio_mode = "auto"
disable_test_id_escaping_and_forfeit_all_rights_to_community_support = true
addopts = [
    "--pylint",
    "--mypy",
    "--cov=app", "--cov-report=xml", "--no-cov-on-fail",
    # "-k", "test_item_get",
    # "-k", "test_use_token",
    # "-k", "test_user_register",
    "-r", "A",
    # "--pdb",
    "-vv",
    # "--showlocals",
]
testpaths = [
    "tests",
    "app",
]
filterwarnings = [
    "ignore::DeprecationWarning:pylint*",
    "ignore::DeprecationWarning:pytest_pylint*",
    "ignore::DeprecationWarning:passlib.*",    # TODO: remove
]
